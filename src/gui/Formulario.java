/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import java.awt.Toolkit;
import java.awt.datatransfer.Clipboard;
import java.awt.datatransfer.ClipboardOwner;
import java.awt.datatransfer.StringSelection;
import java.awt.datatransfer.Transferable;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.PrintWriter;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.StringTokenizer;
import javax.swing.ComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.JFileChooser;

/**
 *
 * @author ELVIS
 */
public class Formulario extends javax.swing.JInternalFrame implements ClipboardOwner{

    /**
     * Creates new form Formulario
     */
    public Formulario() {
        initComponents();
     
         
    }
    public void setClipboard(String texto){
        StringSelection txt=new StringSelection(texto);
        Toolkit.getDefaultToolkit().getSystemClipboard().setContents(txt, this);
    }
    /*public static String ObtenerFecha(){
        Date fecha=new Date();
        SimpleDateFormat formato=new SimpleDateFormat("dd_MM_yyyy");
        return formato.format(fecha);
    }
    
    public String ObtenerUser(){
        String usuario=System.getProperty("user.name");
        return usuario;
    }
    public void GuardarDatos(String datos){
        File archivo;
        FileWriter escribir;
        PrintWriter linea;
        
        
        archivo=new File("C:\\Users\\"+ObtenerUser()+"\\Desktop\\"+ObtenerFecha()+".txt");
        if(!archivo.exists()){
            try {
                archivo.createNewFile();
                escribir=new FileWriter(archivo,true);
                linea=new PrintWriter(escribir);
                linea.println(datos);
                linea.close();
                escribir.close();
            } catch (Exception e) {
                System.out.println(e);
            }
            
        }else{
            try {
                escribir=new FileWriter(archivo,true);
                linea=new PrintWriter(escribir);
                linea.println(datos);
                linea.close();
                escribir.close();
            } catch (Exception e) {
                System.out.println(e);
            }
        }
        
    }*/

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtLID = new javax.swing.JButton();
        txtDireccion = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        cboContrata = new javax.swing.JComboBox<>();
        jSeparator3 = new javax.swing.JSeparator();
        jLabel10 = new javax.swing.JLabel();
        txtCto = new javax.swing.JTextField();
        txtLID9 = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        cboPuerto = new javax.swing.JComboBox<>();
        jLabel12 = new javax.swing.JLabel();
        cboDistrito = new javax.swing.JComboBox<>();
        jScrollPane6 = new javax.swing.JScrollPane();
        txtResultado = new javax.swing.JTextArea();
        btnCopiarNuevo = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        cboMotivo = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtCliente = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtTicket = new javax.swing.JTextField();
        txtCto2 = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        txtCoordenadas = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        txtActivos = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        txtAfectados = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        txtContratista = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        txtNomTecnico = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        jScrollPane7 = new javax.swing.JScrollPane();
        txtResultado2 = new javax.swing.JTextArea();
        btnCopiar2 = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);

        txtLID.setFont(new java.awt.Font("Tahoma", 0, 8)); // NOI18N
        txtLID.setText("X");
        txtLID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtLIDActionPerformed(evt);
            }
        });

        txtDireccion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDireccionActionPerformed(evt);
            }
        });

        jLabel1.setText("Contrata:");

        jLabel2.setText("Direccion:");

        cboContrata.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecciona", "DIGETEL", "OLMA", "KAJOMI", "MALLAUSA", "SGM", "VCONNECTIONS", "CESPEDES", "ALL TELECOM", "ONI", "DATANTENNA" }));
        cboContrata.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboContrataActionPerformed(evt);
            }
        });

        jSeparator3.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jLabel10.setText("CTO/ NAP (Piso):");

        txtCto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCtoActionPerformed(evt);
            }
        });

        txtLID9.setFont(new java.awt.Font("Tahoma", 0, 8)); // NOI18N
        txtLID9.setText("X");
        txtLID9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtLID9ActionPerformed(evt);
            }
        });

        jLabel11.setText("Puerto:");

        cboPuerto.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecciona", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16" }));
        cboPuerto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboPuertoActionPerformed(evt);
            }
        });

        jLabel12.setText("Distrito:");

        cboDistrito.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecciona", "Ancón", "Ate", "Barranco", "Breña", "Carabayllo", "Cercado de Lima", "Chaclacayo", "Chorrillos", "Cieneguilla", "Comas", "El agustino", "Independencia", "Jesús maría", "La molina", "La victoria", "Lince", "Los olivos", "Lurigancho", "Lurín", "Magdalena del mar", "Miraflores", "Pachacámac", "Pucusana", "Pueblo libre", "Puente piedra", "Punta hermosa", "Punta negra", "Rímac", "San bartolo", "San borja", "San isidro", "San Juan de Lurigancho", "San Juan de Miraflores", "San Luis", "San Martin de Porres", "San Miguel", "Santa Anita", "Santa María del Mar", "Santa Rosa", "Santiago de Surco", "Surquillo", "Villa el Salvador", "Villa Maria del Triunfo" }));
        cboDistrito.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboDistritoActionPerformed(evt);
            }
        });

        txtResultado.setColumns(20);
        txtResultado.setRows(5);
        jScrollPane6.setViewportView(txtResultado);

        btnCopiarNuevo.setText("Copiar");
        btnCopiarNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCopiarNuevoActionPerformed(evt);
            }
        });

        cboMotivo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecciona", "POTENCIA DEGRADADA", "SIN POTENCIA", "PUERTOS SIN POTENCIA", "PUERTOS DEGRADADOS", "CTO ROBADA" }));
        cboMotivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboMotivoActionPerformed(evt);
            }
        });

        jLabel6.setText("Motivo:");

        jLabel7.setText("Ticket:");

        txtCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtClienteActionPerformed(evt);
            }
        });

        jLabel8.setText("Cliente:");

        txtTicket.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTicketActionPerformed(evt);
            }
        });

        txtCto2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCto2ActionPerformed(evt);
            }
        });

        jLabel13.setText("CTO:");

        txtCoordenadas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCoordenadasActionPerformed(evt);
            }
        });

        jLabel14.setText("Coordenadas:");

        txtActivos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtActivosActionPerformed(evt);
            }
        });

        jLabel15.setText("Activos:");

        txtAfectados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAfectadosActionPerformed(evt);
            }
        });

        jLabel16.setText("Afectados:");

        txtContratista.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtContratistaActionPerformed(evt);
            }
        });

        jLabel17.setText("Contratista que reporta:");

        txtNomTecnico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNomTecnicoActionPerformed(evt);
            }
        });

        jLabel18.setText("Nombre del tecnico:");

        txtResultado2.setColumns(20);
        txtResultado2.setRows(5);
        jScrollPane7.setViewportView(txtResultado2);

        btnCopiar2.setText("Copiar");
        btnCopiar2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCopiar2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jSeparator1)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel7)
                                            .addComponent(jLabel8)
                                            .addComponent(jLabel13)
                                            .addComponent(jLabel14)
                                            .addComponent(jLabel15))
                                        .addGap(12, 12, 12)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtCto2, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtCoordenadas, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtActivos, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtTicket, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(cboMotivo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addComponent(jLabel6))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(btnCopiar2)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel16)
                                            .addComponent(jLabel17)
                                            .addComponent(jLabel18))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtAfectados, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtContratista, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtNomTecnico, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addComponent(jScrollPane7)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(txtDireccion, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtCto, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtLID9)
                                            .addComponent(txtLID)))
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel1)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(6, 6, 6)
                                        .addComponent(cboContrata, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jLabel10))
                                .addGap(0, 0, 0)
                                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 3, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, 0)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cboPuerto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel11)
                                    .addComponent(jLabel12)
                                    .addComponent(cboDistrito, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnCopiarNuevo))))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cboContrata, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtDireccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtLID))
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtLID9)
                            .addComponent(txtCto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cboDistrito, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnCopiarNuevo))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel11)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cboPuerto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 7, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(cboMotivo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(9, 9, 9)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(txtTicket, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(txtCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel16)
                            .addComponent(txtAfectados, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel17)
                            .addComponent(txtContratista, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel18)
                            .addComponent(txtNomTecnico, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel13)
                            .addComponent(txtCto2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel14)
                            .addComponent(txtCoordenadas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel15)
                            .addComponent(txtActivos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnCopiar2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtLIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtLIDActionPerformed

        txtDireccion.setText(null);
        // TODO add your handling code here:
    }//GEN-LAST:event_txtLIDActionPerformed

    private void txtDireccionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDireccionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDireccionActionPerformed

    private void cboContrataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboContrataActionPerformed

        /*String consulta,solucion;
        int opcion;
        opcion=cboSubopcion.getSelectedIndex();
        
        
        if(cboContrata.getSelectedItem().equals("Calidad de red")){
            cboSubopcion.setVisible(true);
            
        }
        else if(cboContrata.getSelectedItem().equals("Descuento Saldo")){
            cboSubopcion.setVisible(false);
            consulta="Cliente consulta por descuento de saldo";
            solucion="Se valida consumo por servicio MPS - Chat amigos - Salir 36000 - Consumo de 1.80 soles";
            txtConsulta.setText(consulta);
            txtSolucion.setText(solucion);
        }
        else if(cboContrata.getSelectedItem().equals("Routing category")){
            
            cboSubopcion.setVisible(false);
            consulta="Cliente indica que no puede realizar llamadas";
            solucion="Se valida error en routing category __ se realiza la correcion";
            txtConsulta.setText(consulta);
            txtSolucion.setText(solucion);
        }
        else if(cboContrata.getSelectedItem().equals("Migracion")){
            cboSubopcion.setVisible(false);
            consulta="Cliente desea migrar de ___";
            solucion="__ se cumple con condiciones para transferencia \n" +
                     "- Validó datos:	\n" +
                     "- Número que se comunica: 	\n" +
                     "- Número a migrar: 	\n" +
                     "- Plan actual:		\n" +
                     "- Plan que desea migrar: \n" +
                     "- Motivo de migración:";
            txtConsulta.setText(consulta);
            txtSolucion.setText(solucion);
        }
        else if(cboContrata.getSelectedItem().equals("Cancelacion de linea")){
            cboSubopcion.setVisible(false);
            
            consulta="Cliente indica que desea cancelar su servicio";
            solucion="Se verifica proceso de cancelación, se valida __ disponibilidad de transferencia.\n"+
                     "- Validó datos: Si\n" +
                     "- Número que se comunica:\n" +
                     "- Número a cancelar:\n" +
                     "- Motivo de cancelación:";
            txtConsulta.setText(consulta);
            txtSolucion.setText(solucion);
        }
        else if(cboContrata.getSelectedItem().equals("Bloqueo de linea y equipo")){
            cboSubopcion.setVisible(false);
            
            consulta="Cliente desea bloquear su línea y equipo";
            solucion="Se procede con el bloqueo de línea y equipo.\n"+
                     "- Línea a bloquear:\n" +
                     "- Se validaron los datos del titular (1er y 2do nivel) / del que lo solicita / Reniec: (SI/NO):\n" +
                     "- ¿Cuál es el número desde el cuál se reporta el robo o pérdida del equipo? (Obligatorio):\n" +
                     "- Nombres y apellidos completos del solicitante:\n" +
                     "- Documento de identidad del solicitante:\n" +
                     "- Número de Referencia Adicional (Solicitar a que operador pertenece):\n" +
                     "- IMEI bloqueado (16 o 14 dígitos):\n" +
                     "- Marca y Modelo de Equipo bloqueado:\n" +
                     "- Equipo a bloquear: (Último) / (Inmediato Anterior)\n" +
                     "- Se requirió asociar IMEI: (SI/NO):\n" +
                     "- ID de Llamada:";
            txtConsulta.setText(consulta);
            txtSolucion.setText(solucion);
        }
        else if(cboContrata.getSelectedItem().equals("Internet en 4G")){
            cboSubopcion.setVisible(false);
            
            consulta="Cliente desea saber si su linea accede a internet en 4G";
            solucion="Se le indica que no es posible,su equipo y zona no son compatibles para la red 4G";
            txtConsulta.setText(consulta);
            txtSolucion.setText(solucion);
        }
        else if(cboContrata.getSelectedItem().equals("Ciclo de facturacion")){
            cboSubopcion.setVisible(false);
            
            consulta="Cliente desea saber su ciclo de facturacion";
            solucion="Se le detalla su ciclo ... de facturacion";
            txtConsulta.setText(consulta);
            txtSolucion.setText(solucion);
        }
        else if(cboContrata.getSelectedItem().equals("Pago exitoso")){
            cboSubopcion.setVisible(false);
            
            consulta="Cliente desea confirmar el pago de su recibo";
            solucion="Se le indica que esta al dia en sus recibos";
            txtConsulta.setText(consulta);
            txtSolucion.setText(solucion);
        }
        else if(cboContrata.getSelectedItem().equals("Como saber su numero")){
            cboSubopcion.setVisible(false);
            
            consulta="Cliente desea saber cual es su numero";
            solucion="Se le indica la marcacion *180#send";
            txtConsulta.setText(consulta);
            txtSolucion.setText(solucion);
        }
        else if(cboContrata.getSelectedItem().equals("Confirmacion de recarga-SI")){
            cboSubopcion.setVisible(false);
            
            consulta="Cliente desea confirmar si se realizo la recarga";
            solucion="Se le indica si se realizo la recarga";
            txtConsulta.setText(consulta);
            txtSolucion.setText(solucion);
        }
        else if(cboContrata.getSelectedItem().equals("Confirmacion de recarga-NO")){
            cboSubopcion.setVisible(false);
            
            consulta="Cliente desea confirmar si se realizo la recarga";
            solucion="Se le indica no se realizo la recarga";
            txtConsulta.setText(consulta);
            txtSolucion.setText(solucion);
        }
        else if(cboContrata.getSelectedItem().equals("Desea saber su saldo")){
            cboSubopcion.setVisible(false);
            
            consulta="Cliente desea saber su saldo";
            solucion="Se le brinda la informacion de su saldo";
            txtConsulta.setText(consulta);
            txtSolucion.setText(solucion);
        }
        else if(cboContrata.getSelectedItem().equals("Como saber su saldo")){
            cboSubopcion.setVisible(false);
            
            consulta="Cliente desea saber los medios de consulta de saldo";
            solucion="Se le brinda los medios de consulta de saldo";
            txtConsulta.setText(consulta);
            txtSolucion.setText(solucion);
        }
        else if(cboContrata.getSelectedItem().equals("Paquete TI5")){
            cboSubopcion.setVisible(false);
            
            consulta="Cliente desea saber sobre el paquete TI5";
            solucion="Se brinda informacion del paquete TI5";
            txtConsulta.setText(consulta);
            txtSolucion.setText(solucion);
        }
        else if(cboContrata.getSelectedItem().equals("Confirmar compra de paquete TI5")){
            cboSubopcion.setVisible(false);
            
            consulta="Cliente desea confirmar la compra del paquete TI5";
            solucion="Se confirma la compra del paquete TI5";
            txtConsulta.setText(consulta);
            txtSolucion.setText(solucion);
        }
        else if(cboContrata.getSelectedItem().equals("Paquete MM10")){
            cboSubopcion.setVisible(false);
            
            consulta="Cliente desea saber sobre el paquete MM10";
            solucion="Se le indica como comprar el paquete MM10";
            txtConsulta.setText(consulta);
            txtSolucion.setText(solucion);
        }
        else if(cboContrata.getSelectedItem().equals("Portabilidad")){
            cboSubopcion.setVisible(false);
            
            consulta="Cliente desea port su linea con nosotros";
            solucion="Se le indica las consideraciones de la portabilidad";
            txtConsulta.setText(consulta);
            txtSolucion.setText(solucion);
        }
        else if(cboContrata.getSelectedItem().equals("Plan contratado")){
            cboSubopcion.setVisible(false);
            
            consulta="Cliente desea saber los beneficios del plan .....";
            solucion="Se le detalla los beneficios del plan ......";
            txtConsulta.setText(consulta);
            txtSolucion.setText(solucion);
        }
        else if(cboContrata.getSelectedItem().equals("Chip de reposicion")){
            cboSubopcion.setVisible(false);
            
            consulta="Cliente desea saber como recuperar su chip de resposicion";
            solucion="Se le indica como recuperar su chip por la web y presencial";
            txtConsulta.setText(consulta);
            txtSolucion.setText(solucion);
        }
        else if(cboContrata.getSelectedItem().equals("Routing category")){
            cboSubopcion.setVisible(false);
            
            consulta="Cliente indica no puede realizar llamadas";
            solucion="Se valida RC incorrecto ... ,se resetea,se le indica reiniciar y realizar las pruebas";
            txtConsulta.setText(consulta);
            txtSolucion.setText(solucion);
        }
        else{
            cboSubopcion.setVisible(false);
            consulta="";
            solucion="";
            txtConsulta.setText(consulta);
            txtSolucion.setText(solucion);
        }*/
       
      
        // TODO add your handling code here:
    }//GEN-LAST:event_cboContrataActionPerformed

    private void txtCtoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCtoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCtoActionPerformed

    private void txtLID9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtLID9ActionPerformed
        // TODO add your handling code here:
        txtCto.setText("");
    }//GEN-LAST:event_txtLID9ActionPerformed

    private void cboPuertoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboPuertoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cboPuertoActionPerformed

    private void cboDistritoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboDistritoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cboDistritoActionPerformed

    private void btnCopiarNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCopiarNuevoActionPerformed
        // TODO add your handling code here:
        String datos,contrata,direccion,distrito,cto;
        int opcionContrata,opcionPuerto,opcionDistrito;
        opcionContrata=cboContrata.getSelectedIndex();
        direccion=txtDireccion.getText();
        cto=txtCto.getText();
        opcionPuerto=cboPuerto.getSelectedIndex();
        opcionDistrito=cboDistrito.getSelectedIndex();
        switch (opcionContrata) {
            case 1: contrata="DIGETEL"; break;
            case 2: contrata= "OLMA"; break;
            case 3: contrata= "KAJOMI"; break;
            case 4: contrata= "MALLAUSA"; break;
            case 5: contrata= "SGM"; break;
            case 6: contrata= "VCONNECTIONS"; break;
            case 7: contrata= "CESPEDES"; break;
            case 8: contrata= "ALL TELECOM"; break;
            case 9: contrata= "ONI"; break;
            case 10: contrata= "DATANTENNA"; break;
            default:
                contrata="";
        }
        switch (opcionDistrito) {
            case 1: distrito="Ancón"; break;
            case 2: distrito="Ate"; break;
            case 3: distrito="Barranco"; break;
            case 4: distrito="Breña"; break;
            case 5: distrito="Carabayllo"; break;
            case 6: distrito="Cercado de Lima"; break;
            case 7: distrito="Chaclacayo"; break;
            case 8: distrito="Chorrillos"; break;
            case 9: distrito="Cieneguilla"; break;
            case 10: distrito="Comas"; break;
            case 11: distrito="El agustino"; break;
            case 12: distrito="Independencia"; break;
            case 13: distrito="Jesús maría"; break;
            case 14: distrito="La molina"; break;
            case 15: distrito="La victoria"; break;
            case 16: distrito="Lince"; break;
            case 17: distrito="Los olivos"; break;
            case 18: distrito="Lurigancho"; break;
            case 19: distrito="Lurín"; break;
            case 20: distrito="Magdalena del mar"; break;
            case 21: distrito="Miraflores"; break;
            case 22: distrito="Pachacámac"; break;
            case 23: distrito="Pucusana"; break;
            case 24: distrito="Pueblo libre"; break;
            case 25: distrito="Puente piedra"; break;
            case 26: distrito="Punta hermosa"; break;
            case 27: distrito="Punta negra"; break;
            case 28: distrito="Rímac"; break;
            case 29: distrito="San bartolo"; break;
            case 30: distrito="San borja" ; break;
            case 31: distrito="San isidro"; break;
            case 32: distrito="San Juan de Lurigancho"; break;
            case 33: distrito="San Juan de Miraflores"; break;
            case 34: distrito="San Luis"; break;
            case 35: distrito="San Martin de Porres"; break;
            case 36: distrito="San Miguel"; break;
            case 37: distrito="Santa Anita"; break;
            case 38: distrito="Santa María del Mar"; break;
            case 39: distrito="Santa Rosa"; break;
            case 40: distrito="Santiago de Surco"; break;
            case 41: distrito="Surquillo"; break;
            case 42: distrito="Villa el Salvador"; break;
            case 43: distrito="Villa Maria del Triunfo"; break;
            
            default:
                distrito="";
        }

        datos="Traslado OK\n" +
                    "Contrata :"+contrata+ "\n" +
                    "Direccion:"+direccion+ " - "+distrito + "\n" +
                    "CTO:"+cto+ "\n" +
                    "PUERTO:"+opcionPuerto;
        
        txtResultado.setText(datos);
        setClipboard(datos);
    }//GEN-LAST:event_btnCopiarNuevoActionPerformed

    private void cboMotivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboMotivoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cboMotivoActionPerformed

    private void txtClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtClienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtClienteActionPerformed

    private void txtTicketActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTicketActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTicketActionPerformed

    private void txtCto2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCto2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCto2ActionPerformed

    private void txtCoordenadasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCoordenadasActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCoordenadasActionPerformed

    private void txtActivosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtActivosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtActivosActionPerformed

    private void txtAfectadosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAfectadosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAfectadosActionPerformed

    private void txtContratistaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtContratistaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtContratistaActionPerformed

    private void txtNomTecnicoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNomTecnicoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNomTecnicoActionPerformed

    private void btnCopiar2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCopiar2ActionPerformed
        // TODO add your handling code here:
        int opcionMotivo;
        String motivo;
        opcionMotivo=cboMotivo.getSelectedIndex();
        switch (opcionMotivo) {
            case 1:motivo="POTENCIA DEGRADADA"; break;
            case 2:motivo="SIN POTENCIA"; break;
            case 3:motivo="PUERTOS SIN POTENCIA"; break;
            case 4:motivo="PUERTOS DEGRADADOS"; break;
            case 5:motivo="CTO ROBADA"; break;
            default:
                motivo="";
        }
        String resultado="MOTIVO: "+motivo+"\n" +
                " TICKET: "+txtTicket.getText()+"\n" +
                "Cliente: "+txtCliente.getText()+"\n" +
                "CTO: "+txtCto2.getText()+"\n" +
                "COORDENADAS from: "+txtCoordenadas.getText()+"\n" +
                "ACTIVOS: "+txtActivos.getText()+"\n" +
                "AFECTADOS: "+txtAfectados.getText()+"\n" +
                "CONTRATISTA QUE REPORTA: "+txtContratista.getText()+ "\n" +
                "NOMBRE DEL TECNICO: "+txtNomTecnico.getText()+"";
        txtResultado2.setText(resultado);
        setClipboard(resultado);
        
        
    }//GEN-LAST:event_btnCopiar2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCopiar2;
    private javax.swing.JButton btnCopiarNuevo;
    private javax.swing.JComboBox<String> cboContrata;
    private javax.swing.JComboBox<String> cboDistrito;
    private javax.swing.JComboBox<String> cboMotivo;
    private javax.swing.JComboBox<String> cboPuerto;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JTextField txtActivos;
    private javax.swing.JTextField txtAfectados;
    private javax.swing.JTextField txtCliente;
    private javax.swing.JTextField txtContratista;
    private javax.swing.JTextField txtCoordenadas;
    private javax.swing.JTextField txtCto;
    private javax.swing.JTextField txtCto2;
    private javax.swing.JTextField txtDireccion;
    private javax.swing.JButton txtLID;
    private javax.swing.JButton txtLID9;
    private javax.swing.JTextField txtNomTecnico;
    private javax.swing.JTextArea txtResultado;
    private javax.swing.JTextArea txtResultado2;
    private javax.swing.JTextField txtTicket;
    // End of variables declaration//GEN-END:variables

    @Override
    public void lostOwnership(Clipboard clipboard, Transferable contents) {
        //To change body of generated methods, choose Tools | Templates.
    }
}
