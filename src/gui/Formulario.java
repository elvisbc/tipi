/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import java.awt.Toolkit;
import java.awt.datatransfer.Clipboard;
import java.awt.datatransfer.ClipboardOwner;
import java.awt.datatransfer.StringSelection;
import java.awt.datatransfer.Transferable;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.PrintWriter;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.StringTokenizer;
import javax.swing.ComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.JFileChooser;

/**
 *
 * @author ELVIS
 */
public class Formulario extends javax.swing.JInternalFrame implements ClipboardOwner{

    /**
     * Creates new form Formulario
     */
    public Formulario() {
        initComponents();
        
        cboSubopcion.setVisible(false);
         
    }
    public void setClipboard(String texto){
        StringSelection txt=new StringSelection(texto);
        Toolkit.getDefaultToolkit().getSystemClipboard().setContents(txt, this);
    }
    /*public static String ObtenerFecha(){
        Date fecha=new Date();
        SimpleDateFormat formato=new SimpleDateFormat("dd_MM_yyyy");
        return formato.format(fecha);
    }
    
    public String ObtenerUser(){
        String usuario=System.getProperty("user.name");
        return usuario;
    }
    public void GuardarDatos(String datos){
        File archivo;
        FileWriter escribir;
        PrintWriter linea;
        
        
        archivo=new File("C:\\Users\\"+ObtenerUser()+"\\Desktop\\"+ObtenerFecha()+".txt");
        if(!archivo.exists()){
            try {
                archivo.createNewFile();
                escribir=new FileWriter(archivo,true);
                linea=new PrintWriter(escribir);
                linea.println(datos);
                linea.close();
                escribir.close();
            } catch (Exception e) {
                System.out.println(e);
            }
            
        }else{
            try {
                escribir=new FileWriter(archivo,true);
                linea=new PrintWriter(escribir);
                linea.println(datos);
                linea.close();
                escribir.close();
            } catch (Exception e) {
                System.out.println(e);
            }
        }
        
    }*/

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        btnLimpiar = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        txtLID = new javax.swing.JButton();
        btnCopiar = new javax.swing.JButton();
        txtLID2 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtConsulta = new javax.swing.JTextArea();
        txtLID3 = new javax.swing.JButton();
        txtDireccion = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtSolucion = new javax.swing.JTextArea();
        jLabel5 = new javax.swing.JLabel();
        txtLID4 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        cboContrata = new javax.swing.JComboBox<>();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtBorrador = new javax.swing.JTextArea();
        jSeparator3 = new javax.swing.JSeparator();
        jScrollPane4 = new javax.swing.JScrollPane();
        txtConsulta2 = new javax.swing.JTextArea();
        jScrollPane5 = new javax.swing.JScrollPane();
        txtConsulta3 = new javax.swing.JTextArea();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtLID7 = new javax.swing.JButton();
        txtLID8 = new javax.swing.JButton();
        btnCopiar2 = new javax.swing.JButton();
        btnCopiar3 = new javax.swing.JButton();
        cboSubopcion = new javax.swing.JComboBox<>();
        jLabel10 = new javax.swing.JLabel();
        txtCto = new javax.swing.JTextField();
        txtLID9 = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        cboPuerto = new javax.swing.JComboBox<>();
        jLabel12 = new javax.swing.JLabel();
        cboDistrito = new javax.swing.JComboBox<>();
        jScrollPane6 = new javax.swing.JScrollPane();
        txtResultado = new javax.swing.JTextArea();
        btnCopiarNuevo = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);

        jLabel3.setText("Consulta / inconveniente");

        btnLimpiar.setText("Limpiar");
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });

        jLabel4.setText("Solucion / Informacion");

        txtLID.setFont(new java.awt.Font("Tahoma", 0, 8)); // NOI18N
        txtLID.setText("X");
        txtLID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtLIDActionPerformed(evt);
            }
        });

        btnCopiar.setText("Copiar");
        btnCopiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCopiarActionPerformed(evt);
            }
        });

        txtLID2.setFont(new java.awt.Font("Tahoma", 0, 8)); // NOI18N
        txtLID2.setText("X");
        txtLID2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtLID2ActionPerformed(evt);
            }
        });

        txtConsulta.setColumns(20);
        txtConsulta.setRows(5);
        jScrollPane1.setViewportView(txtConsulta);

        txtLID3.setFont(new java.awt.Font("Tahoma", 0, 8)); // NOI18N
        txtLID3.setText("X");
        txtLID3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtLID3ActionPerformed(evt);
            }
        });

        txtDireccion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDireccionActionPerformed(evt);
            }
        });

        txtSolucion.setColumns(20);
        txtSolucion.setRows(5);
        jScrollPane2.setViewportView(txtSolucion);

        jLabel5.setText("Borrador");

        txtLID4.setFont(new java.awt.Font("Tahoma", 0, 8)); // NOI18N
        txtLID4.setText("X");
        txtLID4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtLID4ActionPerformed(evt);
            }
        });

        jLabel1.setText("Contrata:");

        jLabel2.setText("Direccion:");

        cboContrata.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecciona", "DIGETEL", "OLMA", "KAJOMI", "MALLAUSA", "SGM", "VCONNECTIONS", "CESPEDES", "ALL TELECOM", "ONI", "DATANTENNA" }));
        cboContrata.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboContrataActionPerformed(evt);
            }
        });

        txtBorrador.setColumns(20);
        txtBorrador.setRows(5);
        jScrollPane3.setViewportView(txtBorrador);

        jSeparator3.setOrientation(javax.swing.SwingConstants.VERTICAL);

        txtConsulta2.setColumns(20);
        txtConsulta2.setRows(5);
        jScrollPane4.setViewportView(txtConsulta2);

        txtConsulta3.setColumns(20);
        txtConsulta3.setRows(5);
        jScrollPane5.setViewportView(txtConsulta3);

        jLabel8.setText("Consulta / inconveniente 2");

        jLabel9.setText("Consulta / inconveniente 3");

        txtLID7.setFont(new java.awt.Font("Tahoma", 0, 8)); // NOI18N
        txtLID7.setText("X");
        txtLID7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtLID7ActionPerformed(evt);
            }
        });

        txtLID8.setFont(new java.awt.Font("Tahoma", 0, 8)); // NOI18N
        txtLID8.setText("X");
        txtLID8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtLID8ActionPerformed(evt);
            }
        });

        btnCopiar2.setText("Copiar 2");
        btnCopiar2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCopiar2ActionPerformed(evt);
            }
        });

        btnCopiar3.setText("Copiar 3");
        btnCopiar3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCopiar3ActionPerformed(evt);
            }
        });

        cboSubopcion.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Lentitud", "No navega", "No recibe llamada", "No realiza llamada", "No recibe SMS", "No realiza SMS" }));
        cboSubopcion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboSubopcionActionPerformed(evt);
            }
        });

        jLabel10.setText("CTO/ NAP (Piso):");

        txtCto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCtoActionPerformed(evt);
            }
        });

        txtLID9.setFont(new java.awt.Font("Tahoma", 0, 8)); // NOI18N
        txtLID9.setText("X");
        txtLID9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtLID9ActionPerformed(evt);
            }
        });

        jLabel11.setText("Puerto:");

        cboPuerto.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecciona", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16" }));
        cboPuerto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboPuertoActionPerformed(evt);
            }
        });

        jLabel12.setText("Distrito:");

        cboDistrito.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecciona", "Ancón", "Ate", "Barranco", "Breña", "Carabayllo", "Cercado de Lima", "Chaclacayo", "Chorrillos", "Cieneguilla", "Comas", "El agustino", "Independencia", "Jesús maría", "La molina", "La victoria", "Lince", "Los olivos", "Lurigancho", "Lurín", "Magdalena del mar", "Miraflores", "Pachacámac", "Pucusana", "Pueblo libre", "Puente piedra", "Punta hermosa", "Punta negra", "Rímac", "San bartolo", "San borja", "San isidro", "San Juan de Lurigancho", "San Juan de Miraflores", "San Luis", "San Martin de Porres", "San Miguel", "Santa Anita", "Santa María del Mar", "Santa Rosa", "Santiago de Surco", "Surquillo", "Villa el Salvador", "Villa Maria del Triunfo" }));
        cboDistrito.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboDistritoActionPerformed(evt);
            }
        });

        txtResultado.setColumns(20);
        txtResultado.setRows(5);
        jScrollPane6.setViewportView(txtResultado);

        btnCopiarNuevo.setText("Copiar");
        btnCopiarNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCopiarNuevoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addComponent(jScrollPane2)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING)
            .addComponent(jScrollPane4)
            .addComponent(jScrollPane5)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtLID2))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtLID3))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtLID7))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtLID8))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(btnCopiar, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnCopiar2, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnCopiar3, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(41, 41, 41)
                                .addComponent(btnLimpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtLID4)
                                .addGap(56, 56, 56)
                                .addComponent(cboSubopcion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtCto, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(txtDireccion, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtLID9)
                                            .addComponent(txtLID)))
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel1)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(6, 6, 6)
                                        .addComponent(cboContrata, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jLabel10))
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cboPuerto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11)
                            .addComponent(jLabel12)
                            .addComponent(cboDistrito, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnCopiarNuevo))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addComponent(jLabel1)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(cboContrata, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jLabel2)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(txtDireccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txtLID)))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel12)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(cboDistrito, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGap(0, 0, 0)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel10)
                                .addComponent(jLabel11))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtCto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtLID9)
                                .addComponent(cboPuerto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addComponent(jSeparator3))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnCopiarNuevo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(68, 68, 68)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtLID4)
                        .addComponent(cboSubopcion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtLID2)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(4, 4, 4)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtLID7))
                .addGap(4, 4, 4)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtLID8))
                .addGap(1, 1, 1)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtLID3))
                .addGap(1, 1, 1)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(3, 3, 3)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCopiar)
                    .addComponent(btnCopiar2)
                    .addComponent(btnCopiar3)
                    .addComponent(btnLimpiar))
                .addGap(8, 8, 8))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed

        /*txtID.setText(null);
        txtNum.setText(null);
        txtConsulta.setText(null);
        txtConsulta2.setText(null);
        txtConsulta3.setText(null);
        txtSolucion.setText(null);
        txtBorrador.setText(null);
        cboOpcion.setSelectedIndex(0);
        cboSubopcion.setVisible(false);*/

    }//GEN-LAST:event_btnLimpiarActionPerformed

    private void txtLIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtLIDActionPerformed

        txtDireccion.setText(null);
        // TODO add your handling code here:
    }//GEN-LAST:event_txtLIDActionPerformed

    private void btnCopiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCopiarActionPerformed

        String id,numero,borrador,consulta,solucion,copiar,guardar;
        
        /*id=txtID.getText().toString().replace(" ", "");
        numero=txtNum.getText().toString();
        consulta=txtConsulta.getText().toString();
        solucion=txtSolucion.getText().toString();
        borrador=txtBorrador.getText().toString();
        
        if(id.isEmpty()){
            id="No muestra código en llamada";
            
        }
        
        copiar=numero+" // "+consulta+" // "+solucion+" // $$_"+id+"_&&";
        guardar=numero+"//"+borrador+"//"+consulta+"//"+solucion+"//$$_"+id+"_&&";
        setClipboard(copiar);
        GuardarDatos(guardar);
        //setClipboard(numero+"//"+consulta+"//"+solucion+"//$$_"+id+"_&&");*/

    }//GEN-LAST:event_btnCopiarActionPerformed

    private void txtLID2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtLID2ActionPerformed

        txtConsulta.setText(null);
        // TODO add your handling code here:
    }//GEN-LAST:event_txtLID2ActionPerformed

    private void txtLID3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtLID3ActionPerformed

        txtSolucion.setText(null);
        // TODO add your handling code here:
    }//GEN-LAST:event_txtLID3ActionPerformed

    private void txtDireccionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDireccionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDireccionActionPerformed

    private void txtLID4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtLID4ActionPerformed

        txtBorrador.setText(null);

        // TODO add your handling code here:
    }//GEN-LAST:event_txtLID4ActionPerformed

    private void cboContrataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboContrataActionPerformed

        /*String consulta,solucion;
        int opcion;
        opcion=cboSubopcion.getSelectedIndex();
        
        
        if(cboContrata.getSelectedItem().equals("Calidad de red")){
            cboSubopcion.setVisible(true);
            
        }
        else if(cboContrata.getSelectedItem().equals("Descuento Saldo")){
            cboSubopcion.setVisible(false);
            consulta="Cliente consulta por descuento de saldo";
            solucion="Se valida consumo por servicio MPS - Chat amigos - Salir 36000 - Consumo de 1.80 soles";
            txtConsulta.setText(consulta);
            txtSolucion.setText(solucion);
        }
        else if(cboContrata.getSelectedItem().equals("Routing category")){
            
            cboSubopcion.setVisible(false);
            consulta="Cliente indica que no puede realizar llamadas";
            solucion="Se valida error en routing category __ se realiza la correcion";
            txtConsulta.setText(consulta);
            txtSolucion.setText(solucion);
        }
        else if(cboContrata.getSelectedItem().equals("Migracion")){
            cboSubopcion.setVisible(false);
            consulta="Cliente desea migrar de ___";
            solucion="__ se cumple con condiciones para transferencia \n" +
                     "- Validó datos:	\n" +
                     "- Número que se comunica: 	\n" +
                     "- Número a migrar: 	\n" +
                     "- Plan actual:		\n" +
                     "- Plan que desea migrar: \n" +
                     "- Motivo de migración:";
            txtConsulta.setText(consulta);
            txtSolucion.setText(solucion);
        }
        else if(cboContrata.getSelectedItem().equals("Cancelacion de linea")){
            cboSubopcion.setVisible(false);
            
            consulta="Cliente indica que desea cancelar su servicio";
            solucion="Se verifica proceso de cancelación, se valida __ disponibilidad de transferencia.\n"+
                     "- Validó datos: Si\n" +
                     "- Número que se comunica:\n" +
                     "- Número a cancelar:\n" +
                     "- Motivo de cancelación:";
            txtConsulta.setText(consulta);
            txtSolucion.setText(solucion);
        }
        else if(cboContrata.getSelectedItem().equals("Bloqueo de linea y equipo")){
            cboSubopcion.setVisible(false);
            
            consulta="Cliente desea bloquear su línea y equipo";
            solucion="Se procede con el bloqueo de línea y equipo.\n"+
                     "- Línea a bloquear:\n" +
                     "- Se validaron los datos del titular (1er y 2do nivel) / del que lo solicita / Reniec: (SI/NO):\n" +
                     "- ¿Cuál es el número desde el cuál se reporta el robo o pérdida del equipo? (Obligatorio):\n" +
                     "- Nombres y apellidos completos del solicitante:\n" +
                     "- Documento de identidad del solicitante:\n" +
                     "- Número de Referencia Adicional (Solicitar a que operador pertenece):\n" +
                     "- IMEI bloqueado (16 o 14 dígitos):\n" +
                     "- Marca y Modelo de Equipo bloqueado:\n" +
                     "- Equipo a bloquear: (Último) / (Inmediato Anterior)\n" +
                     "- Se requirió asociar IMEI: (SI/NO):\n" +
                     "- ID de Llamada:";
            txtConsulta.setText(consulta);
            txtSolucion.setText(solucion);
        }
        else if(cboContrata.getSelectedItem().equals("Internet en 4G")){
            cboSubopcion.setVisible(false);
            
            consulta="Cliente desea saber si su linea accede a internet en 4G";
            solucion="Se le indica que no es posible,su equipo y zona no son compatibles para la red 4G";
            txtConsulta.setText(consulta);
            txtSolucion.setText(solucion);
        }
        else if(cboContrata.getSelectedItem().equals("Ciclo de facturacion")){
            cboSubopcion.setVisible(false);
            
            consulta="Cliente desea saber su ciclo de facturacion";
            solucion="Se le detalla su ciclo ... de facturacion";
            txtConsulta.setText(consulta);
            txtSolucion.setText(solucion);
        }
        else if(cboContrata.getSelectedItem().equals("Pago exitoso")){
            cboSubopcion.setVisible(false);
            
            consulta="Cliente desea confirmar el pago de su recibo";
            solucion="Se le indica que esta al dia en sus recibos";
            txtConsulta.setText(consulta);
            txtSolucion.setText(solucion);
        }
        else if(cboContrata.getSelectedItem().equals("Como saber su numero")){
            cboSubopcion.setVisible(false);
            
            consulta="Cliente desea saber cual es su numero";
            solucion="Se le indica la marcacion *180#send";
            txtConsulta.setText(consulta);
            txtSolucion.setText(solucion);
        }
        else if(cboContrata.getSelectedItem().equals("Confirmacion de recarga-SI")){
            cboSubopcion.setVisible(false);
            
            consulta="Cliente desea confirmar si se realizo la recarga";
            solucion="Se le indica si se realizo la recarga";
            txtConsulta.setText(consulta);
            txtSolucion.setText(solucion);
        }
        else if(cboContrata.getSelectedItem().equals("Confirmacion de recarga-NO")){
            cboSubopcion.setVisible(false);
            
            consulta="Cliente desea confirmar si se realizo la recarga";
            solucion="Se le indica no se realizo la recarga";
            txtConsulta.setText(consulta);
            txtSolucion.setText(solucion);
        }
        else if(cboContrata.getSelectedItem().equals("Desea saber su saldo")){
            cboSubopcion.setVisible(false);
            
            consulta="Cliente desea saber su saldo";
            solucion="Se le brinda la informacion de su saldo";
            txtConsulta.setText(consulta);
            txtSolucion.setText(solucion);
        }
        else if(cboContrata.getSelectedItem().equals("Como saber su saldo")){
            cboSubopcion.setVisible(false);
            
            consulta="Cliente desea saber los medios de consulta de saldo";
            solucion="Se le brinda los medios de consulta de saldo";
            txtConsulta.setText(consulta);
            txtSolucion.setText(solucion);
        }
        else if(cboContrata.getSelectedItem().equals("Paquete TI5")){
            cboSubopcion.setVisible(false);
            
            consulta="Cliente desea saber sobre el paquete TI5";
            solucion="Se brinda informacion del paquete TI5";
            txtConsulta.setText(consulta);
            txtSolucion.setText(solucion);
        }
        else if(cboContrata.getSelectedItem().equals("Confirmar compra de paquete TI5")){
            cboSubopcion.setVisible(false);
            
            consulta="Cliente desea confirmar la compra del paquete TI5";
            solucion="Se confirma la compra del paquete TI5";
            txtConsulta.setText(consulta);
            txtSolucion.setText(solucion);
        }
        else if(cboContrata.getSelectedItem().equals("Paquete MM10")){
            cboSubopcion.setVisible(false);
            
            consulta="Cliente desea saber sobre el paquete MM10";
            solucion="Se le indica como comprar el paquete MM10";
            txtConsulta.setText(consulta);
            txtSolucion.setText(solucion);
        }
        else if(cboContrata.getSelectedItem().equals("Portabilidad")){
            cboSubopcion.setVisible(false);
            
            consulta="Cliente desea port su linea con nosotros";
            solucion="Se le indica las consideraciones de la portabilidad";
            txtConsulta.setText(consulta);
            txtSolucion.setText(solucion);
        }
        else if(cboContrata.getSelectedItem().equals("Plan contratado")){
            cboSubopcion.setVisible(false);
            
            consulta="Cliente desea saber los beneficios del plan .....";
            solucion="Se le detalla los beneficios del plan ......";
            txtConsulta.setText(consulta);
            txtSolucion.setText(solucion);
        }
        else if(cboContrata.getSelectedItem().equals("Chip de reposicion")){
            cboSubopcion.setVisible(false);
            
            consulta="Cliente desea saber como recuperar su chip de resposicion";
            solucion="Se le indica como recuperar su chip por la web y presencial";
            txtConsulta.setText(consulta);
            txtSolucion.setText(solucion);
        }
        else if(cboContrata.getSelectedItem().equals("Routing category")){
            cboSubopcion.setVisible(false);
            
            consulta="Cliente indica no puede realizar llamadas";
            solucion="Se valida RC incorrecto ... ,se resetea,se le indica reiniciar y realizar las pruebas";
            txtConsulta.setText(consulta);
            txtSolucion.setText(solucion);
        }
        else{
            cboSubopcion.setVisible(false);
            consulta="";
            solucion="";
            txtConsulta.setText(consulta);
            txtSolucion.setText(solucion);
        }*/
       
      
        // TODO add your handling code here:
    }//GEN-LAST:event_cboContrataActionPerformed

    private void txtLID7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtLID7ActionPerformed

        txtConsulta2.setText(null);
        
        // TODO add your handling code here:
    }//GEN-LAST:event_txtLID7ActionPerformed

    private void txtLID8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtLID8ActionPerformed
            txtConsulta3.setText(null);       
            // TODO add your handling code here:
    }//GEN-LAST:event_txtLID8ActionPerformed

    private void btnCopiar2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCopiar2ActionPerformed

        String id,numero,borrador,consulta2,solucion,copiar,guardar;
        
        /*id=txtID.getText().toString().replace(" ", "");
        numero=txtNum.getText().toString();
        consulta2=txtConsulta2.getText().toString();
        solucion=txtSolucion.getText().toString();
        borrador=txtBorrador.getText().toString();
        
        copiar=numero+" // "+consulta2+" // "+solucion+" // $$_"+id+"_&&";
        guardar=numero+"//"+borrador+"//"+consulta2+"//"+solucion+"//$$_"+id+"_&&";
        setClipboard(copiar);
        GuardarDatos(guardar);*/
        // TODO add your handling code here:
    }//GEN-LAST:event_btnCopiar2ActionPerformed

    private void btnCopiar3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCopiar3ActionPerformed
        
        String id,numero,borrador,consulta3,solucion,copiar,guardar;
        
        /*id=txtID.getText().toString().replace(" ", "");
        numero=txtNum.getText().toString();
        consulta3=txtConsulta3.getText().toString();
        solucion=txtSolucion.getText().toString();
        borrador=txtBorrador.getText().toString();
        
        copiar=numero+" // "+consulta3+" // "+solucion+" // $$_"+id+"_&&";
        guardar=numero+"//"+borrador+"//"+consulta3+"//"+solucion+"//$$_"+id+"_&&";
        setClipboard(copiar);
        GuardarDatos(guardar);        */
        // TODO add your handling code here:
    }//GEN-LAST:event_btnCopiar3ActionPerformed

    private void cboSubopcionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboSubopcionActionPerformed

       /* String consulta,solucion;
        int opcion;
        opcion=cboSubopcion.getSelectedIndex();
        switch(opcion){
                case 0:
                    consulta="Cliente indica la navegacion es muy lenta";
                    solucion="Se le indica activar el modo avion,realizar la preuba"+
                            "cruzada y el borrado de la memoria cache,reiniciar y realizar las pruebas";
                    txtConsulta.setText(consulta);
                    txtSolucion.setText(solucion);
                    break;
                case 1:
                    consulta="Cliente indica no accede a internet";
                    solucion="Se le indica enviar un sms con la palabra CONFIG al 170,"+
                            "se envia el sms de configuracion manual y el automatico,"+
                            "reiniciar y realizar las pruebas, equipo NUEVO ";
                    txtConsulta.setText(consulta);
            txtSolucion.setText(solucion);
                    break;
                case 2:
                    consulta="Cliente no puede recibir llamada";
                    solucion="Realiza descarte nivel 1, se realiza prueba cruzada equipo";
                    txtConsulta.setText(consulta);
                    txtSolucion.setText(solucion);
                    break;
                case 3:
                    consulta="Cliente no puede realizar llamada";
                    solucion="Realiza descarte nivel 1, se realiza prueba cruzada equipo";
                    txtConsulta.setText(consulta);
                    txtSolucion.setText(solucion);
                    break;
                case 4:
                    consulta="Cliente no puede recibir SMS";
                    solucion="Realiza descarte nivel 1, se realiza prueba cruzada equipo";
                    txtConsulta.setText(consulta);
                    txtSolucion.setText(solucion);
                    break;
                case 5:
                    consulta="Cliente no puede realizar SMS";
                    solucion="Realiza descarte nivel 1, se realiza prueba cruzada equipo";
                    txtConsulta.setText(consulta);
                    txtSolucion.setText(solucion);
                    break; 
                   
            }*/

        // TODO add your handling code here:
    }//GEN-LAST:event_cboSubopcionActionPerformed

    private void txtCtoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCtoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCtoActionPerformed

    private void txtLID9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtLID9ActionPerformed
        // TODO add your handling code here:
        txtCto.setText("");
    }//GEN-LAST:event_txtLID9ActionPerformed

    private void cboPuertoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboPuertoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cboPuertoActionPerformed

    private void cboDistritoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboDistritoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cboDistritoActionPerformed

    private void btnCopiarNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCopiarNuevoActionPerformed
        // TODO add your handling code here:
        String datos,contrata,direccion,distrito,cto;
        int opcionContrata,opcionPuerto,opcionDistrito;
        opcionContrata=cboContrata.getSelectedIndex();
        direccion=txtDireccion.getText();
        cto=txtCto.getText();
        opcionPuerto=cboPuerto.getSelectedIndex();
        opcionDistrito=cboDistrito.getSelectedIndex();
        switch (opcionContrata) {
            case 1: contrata="DIGETEL"; break;
            case 2: contrata= "OLMA"; break;
            case 3: contrata= "KAJOMI"; break;
            case 4: contrata= "MALLAUSA"; break;
            case 5: contrata= "SGM"; break;
            case 6: contrata= "VCONNECTIONS"; break;
            case 7: contrata= "CESPEDES"; break;
            case 8: contrata= "ALL TELECOM"; break;
            case 9: contrata= "ONI"; break;
            case 10: contrata= "DATANTENNA"; break;
            default:
                contrata="";
        }
        switch (opcionDistrito) {
            case 1: distrito="Ancón"; break;
            case 2: distrito="Ate"; break;
            case 3: distrito="Barranco"; break;
            case 4: distrito="Breña"; break;
            case 5: distrito="Carabayllo"; break;
            case 6: distrito="Cercado de Lima"; break;
            case 7: distrito="Chaclacayo"; break;
            case 8: distrito="Chorrillos"; break;
            case 9: distrito="Cieneguilla"; break;
            case 10: distrito="Comas"; break;
            case 11: distrito="El agustino"; break;
            case 12: distrito="Independencia"; break;
            case 13: distrito="Jesús maría"; break;
            case 14: distrito="La molina"; break;
            case 15: distrito="La victoria"; break;
            case 16: distrito="Lince"; break;
            case 17: distrito="Los olivos"; break;
            case 18: distrito="Lurigancho"; break;
            case 19: distrito="Lurín"; break;
            case 20: distrito="Magdalena del mar"; break;
            case 21: distrito="Miraflores"; break;
            case 22: distrito="Pachacámac"; break;
            case 23: distrito="Pucusana"; break;
            case 24: distrito="Pueblo libre"; break;
            case 25: distrito="Puente piedra"; break;
            case 26: distrito="Punta hermosa"; break;
            case 27: distrito="Punta negra"; break;
            case 28: distrito="Rímac"; break;
            case 29: distrito="San bartolo"; break;
            case 30: distrito="San borja" ; break;
            case 31: distrito="San isidro"; break;
            case 32: distrito="San Juan de Lurigancho"; break;
            case 33: distrito="San Juan de Miraflores"; break;
            case 34: distrito="San Luis"; break;
            case 35: distrito="San Martin de Porres"; break;
            case 36: distrito="San Miguel"; break;
            case 37: distrito="Santa Anita"; break;
            case 38: distrito="Santa María del Mar"; break;
            case 39: distrito="Santa Rosa"; break;
            case 40: distrito="Santiago de Surco"; break;
            case 41: distrito="Surquillo"; break;
            case 42: distrito="Villa el Salvador"; break;
            case 43: distrito="Villa Maria del Triunfo"; break;
            
            default:
                distrito="";
        }

        datos="Traslado OK\n" +
                    "Contrata :"+contrata+ "\n" +
                    "Direccion:"+direccion+ " - "+distrito + "\n" +
                    "CTO:"+cto+ "\n" +
                    "PUERTO:"+opcionPuerto;
        
        txtResultado.setText(datos);
        setClipboard(datos);
    }//GEN-LAST:event_btnCopiarNuevoActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCopiar;
    private javax.swing.JButton btnCopiar2;
    private javax.swing.JButton btnCopiar3;
    private javax.swing.JButton btnCopiarNuevo;
    private javax.swing.JButton btnLimpiar;
    private javax.swing.JComboBox<String> cboContrata;
    private javax.swing.JComboBox<String> cboDistrito;
    private javax.swing.JComboBox<String> cboPuerto;
    private javax.swing.JComboBox<String> cboSubopcion;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JTextArea txtBorrador;
    private javax.swing.JTextArea txtConsulta;
    private javax.swing.JTextArea txtConsulta2;
    private javax.swing.JTextArea txtConsulta3;
    private javax.swing.JTextField txtCto;
    private javax.swing.JTextField txtDireccion;
    private javax.swing.JButton txtLID;
    private javax.swing.JButton txtLID2;
    private javax.swing.JButton txtLID3;
    private javax.swing.JButton txtLID4;
    private javax.swing.JButton txtLID7;
    private javax.swing.JButton txtLID8;
    private javax.swing.JButton txtLID9;
    private javax.swing.JTextArea txtResultado;
    private javax.swing.JTextArea txtSolucion;
    // End of variables declaration//GEN-END:variables

    @Override
    public void lostOwnership(Clipboard clipboard, Transferable contents) {
        //To change body of generated methods, choose Tools | Templates.
    }
}
